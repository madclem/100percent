{"version":3,"file":"static/webpack/static/development/pages/about.js.727c2debfaceed65f277.hot-update.js","sources":["webpack:///./pages/about/Card.js","webpack:///./pages/about/Timeline.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport default function Card () {\n\n    const Container = styled.div`\n        pointer-events: none;\n        background-color:white;\n        z-index: 2;\n        padding: 10px;\n        margin-bottom: 10px;\n        \n        ${media.tablet`\n            opacity: .7;\n            background-color:#f2f2f2;\n            width: 220px;\n            ${propsS => propsS.bottom  ? 'bottom:' + propsS.bottom + '%;' : ''}\n            ${propsS => propsS.top ? 'top:' + propsS.top + '%;' : ''}\n            position:absolute;\n            margin: 0;\n\n            ${Column}:hover & {\n                background-color:white;\n                opacity: 1;\n\n            }\n        `}\n\n        h5 {\n            margin: 0 0 10px 0;\n        }\n        \n        p {\n            margin: 0;\n        }\n    `\n\n    return (\n\n        <Container {...props}>\n            {props.children}\n        </Container>\n\n    );\n}","import React from 'react';\nimport styled from 'styled-components';\nimport media from 'utils/styles/media';\nimport data from './data';\nimport Card from './Card';\n\nexport default function Timeline () {\n\n    const Container = styled.div`\n        display: flex;\n        flex-wrap: wrap;\n        width: 94%;\n        position: relative;\n        margin: 0 3%;\n        // justify-content: center;\n        border-left: 1px dashed rgba(0,0,0,.1);\n\n        ${media.tablet`\n            height: 100vh;\n            flex-wrap: nowrap;\n            border: none;\n        `}\n    `;\n\n    const Column = styled.div`\n        width: 100%;\n        ${media.tablet`\n            height: 100%;\n            width: 75px;\n            border-right: 1px dashed rgba(0,0,0,.1);\n            position: relative;\n        `}\n    `;\n\n    const LineMiddle = styled.div`\n        display: none;\n    \n        ${media.tablet`\n            display: block;\n            width: 100%;\n            top: 50%;\n            position: absolute;\n            border-bottom: 1px solid black;\n        `}\n\n    `;\n\n    const Year = styled.span`\n        font-size: 24px;\n        color: rgb(223, 229, 231);\n        font-weight: bold;\n        display: block;\n        margin: 20px 0 0 10px;\n        \n        ${media.tablet`\n            margin: 0 0 0 5px;\n            transform: translateY(-100%);\n            position: absolute;\n            top: 50%;\n        `}\n    `;\n\n    const VerticalLine = styled.div`\n        display: none;\n\n        ${media.tablet`\n            display: block;\n            margin: 0;\n            position:relative;\n            top: 50%;\n            left: -1px;\n            width: 1px;\n            background-image: linear-gradient(to bottom, rgba(0,0,0,.4), rgba(0, 0,0, .0));\n            height: ${propsS => propsS.height || 0}%;\n\n            ${Column}:hover & {\n                background-image: linear-gradient(to bottom, rgb(1, 58, 81), 26%, rgb(251, 140, 0));\n            }\n\n            ${propsS => propsS.translateY ? `\n            background-image: linear-gradient(to top, rgba(0,0,0,.4), rgba(0, 0,0, .0));\n                transform: translateY(-100%);\n\n                ${Column}:hover & {\n                    background-image: linear-gradient(to top, rgb(1, 58, 81), 26%, rgb(251, 140, 0));\n                }\n            ` : ''}\n        `}\n\n    `;\n        \n    // background-image: linear-gradient(to top, rgb(1, 58, 81), 26%, rgb(0, 229, 158));\n    function getColumn() {\n\n        const positions = [\n            { bottom:  80},\n            { bottom: 60},\n            { top: 80},\n            { top: 60},\n        ]\n        const years = {};\n        return data.map((d, index)=>{\n            const pos = positions[index % 4];\n            const year = years[d.year] ? '' : d.year;\n            years[d.year] = true;\n\n            let height = (pos.bottom || pos.top) - 50;\n            let translateY = pos.bottom ? true: false;\n            return (\n            <Column key={d.id}>\n                <Year> {year} </Year>\n                <Card top={pos.top} bottom={pos.bottom} className='z-depth-1'>\n                    <h5>{d.title}</h5>\n                    <p>{d.text}</p>\n                </Card>\n\n                <VerticalLine height={height} translateY={translateY} />\n            </Column>\n            );\n        });\n    }\n\n    return (\n        <Container>\n            {getColumn()}\n            <LineMiddle />\n        </Container>\n    );\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAWA;AAAA;AACA;AAAA;AAoBA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAWA;AAAA;AAMA;AAAA;AACA;AAYA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}