{"version":3,"file":"static/webpack/static/development/pages/about.js.e11366b437a83ea7bfee.hot-update.js","sources":["webpack:///./components/Timeline/Timeline.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport media from 'utils/styles/media';\nimport data from './data';\nimport Card from './Card';\nimport Column from './Column';\n\nexport default function Timeline () {\n    const widthPoint = 6;\n\n    const Container = styled.div`\n        display: flex;\n        flex-wrap: wrap;\n        width: 94%;\n        position: relative;\n        margin: 0 3%;\n        max-width: 100vh;\n        overflow-x: scroll;\n        // justify-content: center;\n        border-left: 1px dashed rgba(0,0,0,.1);\n\n        ${media.tablet`\n            height: 100vh;\n            flex-wrap: nowrap;\n            border: none;\n        `}\n    `;\n\n    const LineMiddle = styled.div`\n        display: none;\n    \n        ${media.tablet`\n            display: block;\n            width: 100%;\n            top: 50%;\n            left: 0;\n            position: absolute;\n            border-bottom: 1px solid rgb(220,220,220);\n        `}\n\n    `;\n\n    const Year = styled.span`\n        font-size: 24px;\n        color: rgb(223, 229, 231);\n        font-weight: bold;\n        display: block;\n        margin: 20px 0 0 10px;\n        \n        ${media.tablet`\n            margin: 0 0 0 5px;\n            transform: translateY(-100%);\n            position: absolute;\n            top: 50%;\n\n            ${Column}:hover & {\n                color: black;\n            }\n        `}\n    `;\n\n    const VerticalLine = styled.div`\n        display: none;\n\n        ${media.tablet`\n            display: block;\n            margin: 0;\n            position:relative;\n            top: 50%;\n            left: -1px;\n            width: 1px;\n            background-image: linear-gradient(to bottom, rgb(220,220,220), rgb(220, 220,220));\n            height: ${propsS => propsS.height || 0}%;\n\n            ${Column}:hover & {\n                background-image: linear-gradient(to bottom, rgb(1, 58, 81), 26%, rgb(251, 140, 0));\n                z-index: 3;\n            }\n\n            ${propsS => propsS.translateY ? `\n                background-image: linear-gradient(to top, rgb(220,220,220), rgb(220,220,220));\n                transform: translateY(-100%);\n\n                ${Column}:hover & {\n                    background-image: linear-gradient(to top, rgb(1, 58, 81), 26%, rgb(251, 140, 0));\n                }\n            ` : ''}\n        `}\n\n    `;\n\n    const Point = styled.div`\n        ${media.tablet`\n            z-index: 3;\n            width: ${widthPoint}px;\n            height: ${widthPoint}px;\n            background-color: rgb(220,220,220);\n            ${Column}:hover & { background-color: rgb(0, 0, 0); }\n            border-radius: 100%;\n            position: absolute;\n            top: calc(50% - ${widthPoint/2}px);\n            left: -${widthPoint/2}px;        \n        `}\n    `;\n        \n    // background-image: linear-gradient(to top, rgb(1, 58, 81), 26%, rgb(0, 229, 158));\n    function getColumn() {\n\n        const positions = [\n            { bottom:  80},\n            { bottom: 60},\n            { top: 80},\n            { top: 60},\n        ]\n        const years = {};\n        return data.map((d, index)=>{\n            const pos = positions[index % 4];\n            const year = years[d.year] ? '' : d.year;\n            years[d.year] = true;\n\n            let height = (pos.bottom || pos.top) - 50;\n            let translateY = pos.bottom ? true: false;\n            return (\n            <Column key={d.id}>\n                <Year> {year} </Year>\n                <Card top={pos.top} bottom={pos.bottom} className='z-depth-1'>\n                    <h5><i className='material-icons'>{d.icon}</i>{d.title}</h5>\n                    <p>{d.text}</p>\n                </Card>\n\n                <VerticalLine height={height} translateY={translateY} />\n                <Point />\n            </Column>\n            );\n        });\n    }\n\n    return (\n        <Container>\n            {getColumn()}\n            <LineMiddle />\n        </Container>\n    );\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAmBA;AAAA;AAAA;AAAA;AAWA;AAAA;AAOA;AAAA;AAYA;AAAA;AAAA;AAAA;AACA;AAcA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}